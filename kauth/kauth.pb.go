// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kauth.proto

package kauth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User_AccessLevel int32

const (
	User_USER  User_AccessLevel = 0
	User_ADMIN User_AccessLevel = 1
)

var User_AccessLevel_name = map[int32]string{
	0: "USER",
	1: "ADMIN",
}

var User_AccessLevel_value = map[string]int32{
	"USER":  0,
	"ADMIN": 1,
}

func (x User_AccessLevel) String() string {
	return proto.EnumName(User_AccessLevel_name, int32(x))
}

func (User_AccessLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_155198df57d8c205, []int{6, 0}
}

type PingMessage struct {
	Greeting             string   `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMessage) Reset()         { *m = PingMessage{} }
func (m *PingMessage) String() string { return proto.CompactTextString(m) }
func (*PingMessage) ProtoMessage()    {}
func (*PingMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_155198df57d8c205, []int{0}
}

func (m *PingMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMessage.Unmarshal(m, b)
}
func (m *PingMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMessage.Marshal(b, m, deterministic)
}
func (m *PingMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMessage.Merge(m, src)
}
func (m *PingMessage) XXX_Size() int {
	return xxx_messageInfo_PingMessage.Size(m)
}
func (m *PingMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PingMessage proto.InternalMessageInfo

func (m *PingMessage) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

type MeInput struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeInput) Reset()         { *m = MeInput{} }
func (m *MeInput) String() string { return proto.CompactTextString(m) }
func (*MeInput) ProtoMessage()    {}
func (*MeInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_155198df57d8c205, []int{1}
}

func (m *MeInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeInput.Unmarshal(m, b)
}
func (m *MeInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeInput.Marshal(b, m, deterministic)
}
func (m *MeInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeInput.Merge(m, src)
}
func (m *MeInput) XXX_Size() int {
	return xxx_messageInfo_MeInput.Size(m)
}
func (m *MeInput) XXX_DiscardUnknown() {
	xxx_messageInfo_MeInput.DiscardUnknown(m)
}

var xxx_messageInfo_MeInput proto.InternalMessageInfo

type SingupInput struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingupInput) Reset()         { *m = SingupInput{} }
func (m *SingupInput) String() string { return proto.CompactTextString(m) }
func (*SingupInput) ProtoMessage()    {}
func (*SingupInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_155198df57d8c205, []int{2}
}

func (m *SingupInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingupInput.Unmarshal(m, b)
}
func (m *SingupInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingupInput.Marshal(b, m, deterministic)
}
func (m *SingupInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingupInput.Merge(m, src)
}
func (m *SingupInput) XXX_Size() int {
	return xxx_messageInfo_SingupInput.Size(m)
}
func (m *SingupInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SingupInput.DiscardUnknown(m)
}

var xxx_messageInfo_SingupInput proto.InternalMessageInfo

func (m *SingupInput) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SingupInput) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SignupOutput struct {
	VerificationToken    string   `protobuf:"bytes,1,opt,name=verification_token,json=verificationToken,proto3" json:"verification_token,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Success              bool     `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignupOutput) Reset()         { *m = SignupOutput{} }
func (m *SignupOutput) String() string { return proto.CompactTextString(m) }
func (*SignupOutput) ProtoMessage()    {}
func (*SignupOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_155198df57d8c205, []int{3}
}

func (m *SignupOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignupOutput.Unmarshal(m, b)
}
func (m *SignupOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignupOutput.Marshal(b, m, deterministic)
}
func (m *SignupOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignupOutput.Merge(m, src)
}
func (m *SignupOutput) XXX_Size() int {
	return xxx_messageInfo_SignupOutput.Size(m)
}
func (m *SignupOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_SignupOutput.DiscardUnknown(m)
}

var xxx_messageInfo_SignupOutput proto.InternalMessageInfo

func (m *SignupOutput) GetVerificationToken() string {
	if m != nil {
		return m.VerificationToken
	}
	return ""
}

func (m *SignupOutput) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *SignupOutput) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type LoginInput struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginInput) Reset()         { *m = LoginInput{} }
func (m *LoginInput) String() string { return proto.CompactTextString(m) }
func (*LoginInput) ProtoMessage()    {}
func (*LoginInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_155198df57d8c205, []int{4}
}

func (m *LoginInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginInput.Unmarshal(m, b)
}
func (m *LoginInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginInput.Marshal(b, m, deterministic)
}
func (m *LoginInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginInput.Merge(m, src)
}
func (m *LoginInput) XXX_Size() int {
	return xxx_messageInfo_LoginInput.Size(m)
}
func (m *LoginInput) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginInput.DiscardUnknown(m)
}

var xxx_messageInfo_LoginInput proto.InternalMessageInfo

func (m *LoginInput) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginInput) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginOutput struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Success              bool     `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginOutput) Reset()         { *m = LoginOutput{} }
func (m *LoginOutput) String() string { return proto.CompactTextString(m) }
func (*LoginOutput) ProtoMessage()    {}
func (*LoginOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_155198df57d8c205, []int{5}
}

func (m *LoginOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginOutput.Unmarshal(m, b)
}
func (m *LoginOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginOutput.Marshal(b, m, deterministic)
}
func (m *LoginOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginOutput.Merge(m, src)
}
func (m *LoginOutput) XXX_Size() int {
	return xxx_messageInfo_LoginOutput.Size(m)
}
func (m *LoginOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginOutput.DiscardUnknown(m)
}

var xxx_messageInfo_LoginOutput proto.InternalMessageInfo

func (m *LoginOutput) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginOutput) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *LoginOutput) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	PasswordHash         string   `protobuf:"bytes,3,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_155198df57d8c205, []int{6}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

func init() {
	proto.RegisterEnum("kauth.User_AccessLevel", User_AccessLevel_name, User_AccessLevel_value)
	proto.RegisterType((*PingMessage)(nil), "kauth.PingMessage")
	proto.RegisterType((*MeInput)(nil), "kauth.MeInput")
	proto.RegisterType((*SingupInput)(nil), "kauth.SingupInput")
	proto.RegisterType((*SignupOutput)(nil), "kauth.SignupOutput")
	proto.RegisterType((*LoginInput)(nil), "kauth.LoginInput")
	proto.RegisterType((*LoginOutput)(nil), "kauth.LoginOutput")
	proto.RegisterType((*User)(nil), "kauth.User")
}

func init() { proto.RegisterFile("kauth.proto", fileDescriptor_155198df57d8c205) }

var fileDescriptor_155198df57d8c205 = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xb1, 0x49, 0x1a, 0x7b, 0x1c, 0xa2, 0x74, 0x89, 0x50, 0x64, 0x71, 0xa8, 0x96, 0x4b,
	0xa9, 0x44, 0x2d, 0xda, 0x5b, 0x0f, 0xa0, 0x48, 0x50, 0x5a, 0xa9, 0x29, 0x28, 0xa6, 0xe7, 0x6a,
	0x49, 0x86, 0xf5, 0xaa, 0xce, 0xae, 0xe5, 0x5d, 0xb7, 0xe2, 0xca, 0x2b, 0xf0, 0x68, 0x48, 0x3c,
	0x01, 0x0f, 0x82, 0xbc, 0xbb, 0x49, 0x7c, 0xe0, 0x02, 0xc7, 0x7f, 0xc6, 0xff, 0xe7, 0x5f, 0xfe,
	0xc7, 0x90, 0xdc, 0xb1, 0xc6, 0x14, 0xc7, 0x55, 0xad, 0x8c, 0x22, 0x7d, 0x2b, 0xd2, 0xe7, 0x5c,
	0x29, 0x5e, 0x62, 0xc6, 0x2a, 0x91, 0x31, 0x29, 0x95, 0x61, 0x46, 0x28, 0xa9, 0xdd, 0x43, 0xf4,
	0x25, 0x24, 0x9f, 0x84, 0xe4, 0x73, 0xd4, 0x9a, 0x71, 0x24, 0x29, 0x44, 0xbc, 0x46, 0x34, 0x42,
	0xf2, 0x69, 0x70, 0x10, 0x1c, 0xc6, 0x8b, 0xad, 0xa6, 0x31, 0x0c, 0xe6, 0x78, 0x29, 0xab, 0xc6,
	0xd0, 0xb7, 0x90, 0xe4, 0x42, 0xf2, 0xa6, 0xb2, 0x92, 0x4c, 0xa0, 0x8f, 0x6b, 0x26, 0x4a, 0x6f,
	0x71, 0xa2, 0x65, 0x55, 0x4c, 0xeb, 0x07, 0x55, 0xaf, 0xa6, 0xa1, 0x63, 0x6d, 0x34, 0x5d, 0xc3,
	0x30, 0x17, 0x5c, 0x36, 0xd5, 0xc7, 0xc6, 0xb4, 0x84, 0x57, 0x40, 0xee, 0xb1, 0x16, 0x5f, 0xc5,
	0xd2, 0xa6, 0xbb, 0x35, 0xea, 0x0e, 0xa5, 0xc7, 0xed, 0x77, 0x37, 0x9f, 0xdb, 0x85, 0x7d, 0x61,
	0x5d, 0xab, 0xda, 0x73, 0x9d, 0x20, 0x53, 0x18, 0xe8, 0x66, 0xb9, 0x44, 0xad, 0xa7, 0x8f, 0x0f,
	0x82, 0xc3, 0x68, 0xb1, 0x91, 0xf4, 0x0d, 0xc0, 0x95, 0xe2, 0x42, 0xfe, 0x6f, 0xdc, 0x1c, 0x12,
	0xeb, 0xf7, 0x69, 0x27, 0xd0, 0xef, 0x06, 0x74, 0xe2, 0x9f, 0x43, 0x35, 0xd0, 0xbb, 0xd1, 0x58,
	0x93, 0x11, 0x84, 0x62, 0xe5, 0x51, 0xa1, 0x58, 0xed, 0xe2, 0x85, 0xdd, 0x78, 0x2f, 0xe0, 0xc9,
	0x26, 0xce, 0x6d, 0xc1, 0x74, 0x61, 0x69, 0xf1, 0x62, 0xb8, 0x19, 0x5e, 0x30, 0x5d, 0x50, 0x0a,
	0xc9, 0xcc, 0xc2, 0xaf, 0xf0, 0x1e, 0x4b, 0x12, 0x41, 0xef, 0x26, 0x7f, 0xbf, 0x18, 0x3f, 0x22,
	0x31, 0xf4, 0x67, 0xef, 0xe6, 0x97, 0xd7, 0xe3, 0xe0, 0xe4, 0x1a, 0x7a, 0x6d, 0xe3, 0xe4, 0x1c,
	0xa2, 0x9c, 0x7d, 0xbb, 0xc0, 0xb2, 0x54, 0x84, 0x1c, 0xbb, 0xc3, 0xe9, 0x9c, 0x42, 0xfa, 0x97,
	0x19, 0x25, 0xdf, 0x7f, 0xfe, 0xfe, 0x11, 0x0e, 0xe9, 0x20, 0x7b, 0x9d, 0x55, 0x42, 0xf2, 0xb3,
	0xe0, 0xe8, 0xe4, 0x57, 0x00, 0xa3, 0x59, 0x63, 0x0a, 0x94, 0xc6, 0x77, 0x44, 0x3e, 0xc0, 0x9e,
	0x6b, 0x77, 0x0b, 0xee, 0x5c, 0x4b, 0xfa, 0x74, 0x3b, 0xdb, 0x1d, 0x00, 0x9d, 0x58, 0xf2, 0x88,
	0xc6, 0x59, 0xa3, 0xb1, 0xce, 0x24, 0x3e, 0x9c, 0x05, 0x47, 0xe4, 0x1c, 0xfa, 0xf6, 0xbb, 0x93,
	0x7d, 0xef, 0xd9, 0xb5, 0xb8, 0xcd, 0xd7, 0x29, 0x86, 0x3e, 0xb3, 0x94, 0x31, 0x4d, 0x1c, 0xa5,
	0x6c, 0x57, 0x2d, 0xe7, 0x14, 0xc2, 0x39, 0x92, 0x91, 0x77, 0xf8, 0x2b, 0x4e, 0x13, 0xaf, 0xdb,
	0x16, 0xe8, 0xd8, 0x5a, 0x81, 0x44, 0xce, 0xba, 0xc6, 0x2f, 0x7b, 0xf6, 0x0f, 0x39, 0xfd, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xc4, 0xa6, 0x90, 0x36, 0x55, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PingClient is the client API for Ping service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingClient interface {
	SayHello(ctx context.Context, in *PingMessage, opts ...grpc.CallOption) (*PingMessage, error)
}

type pingClient struct {
	cc *grpc.ClientConn
}

func NewPingClient(cc *grpc.ClientConn) PingClient {
	return &pingClient{cc}
}

func (c *pingClient) SayHello(ctx context.Context, in *PingMessage, opts ...grpc.CallOption) (*PingMessage, error) {
	out := new(PingMessage)
	err := c.cc.Invoke(ctx, "/kauth.Ping/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PingServer is the server API for Ping service.
type PingServer interface {
	SayHello(context.Context, *PingMessage) (*PingMessage, error)
}

func RegisterPingServer(s *grpc.Server, srv PingServer) {
	s.RegisterService(&_Ping_serviceDesc, srv)
}

func _Ping_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kauth.Ping/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingServer).SayHello(ctx, req.(*PingMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ping_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kauth.Ping",
	HandlerType: (*PingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Ping_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kauth.proto",
}

// AuthenticationClient is the client API for Authentication service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthenticationClient interface {
	Signup(ctx context.Context, in *SingupInput, opts ...grpc.CallOption) (*SignupOutput, error)
	Login(ctx context.Context, in *LoginInput, opts ...grpc.CallOption) (*LoginOutput, error)
	Me(ctx context.Context, in *MeInput, opts ...grpc.CallOption) (*User, error)
}

type authenticationClient struct {
	cc *grpc.ClientConn
}

func NewAuthenticationClient(cc *grpc.ClientConn) AuthenticationClient {
	return &authenticationClient{cc}
}

func (c *authenticationClient) Signup(ctx context.Context, in *SingupInput, opts ...grpc.CallOption) (*SignupOutput, error) {
	out := new(SignupOutput)
	err := c.cc.Invoke(ctx, "/kauth.Authentication/Signup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) Login(ctx context.Context, in *LoginInput, opts ...grpc.CallOption) (*LoginOutput, error) {
	out := new(LoginOutput)
	err := c.cc.Invoke(ctx, "/kauth.Authentication/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) Me(ctx context.Context, in *MeInput, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/kauth.Authentication/Me", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthenticationServer is the server API for Authentication service.
type AuthenticationServer interface {
	Signup(context.Context, *SingupInput) (*SignupOutput, error)
	Login(context.Context, *LoginInput) (*LoginOutput, error)
	Me(context.Context, *MeInput) (*User, error)
}

func RegisterAuthenticationServer(s *grpc.Server, srv AuthenticationServer) {
	s.RegisterService(&_Authentication_serviceDesc, srv)
}

func _Authentication_Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingupInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kauth.Authentication/Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Signup(ctx, req.(*SingupInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kauth.Authentication/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Login(ctx, req.(*LoginInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_Me_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Me(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kauth.Authentication/Me",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Me(ctx, req.(*MeInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authentication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kauth.Authentication",
	HandlerType: (*AuthenticationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Signup",
			Handler:    _Authentication_Signup_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Authentication_Login_Handler,
		},
		{
			MethodName: "Me",
			Handler:    _Authentication_Me_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kauth.proto",
}
